<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://xpirt.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://xpirt.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-18T12:10:53+00:00</updated><id>https://xpirt.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">J2Store plugin 3.3.6 – SQL Injection (CVE-2019-9184)</title><link href="https://xpirt.github.io/blog/2019/j2store-sql-injection/" rel="alternate" type="text/html" title="J2Store plugin 3.3.6 – SQL Injection (CVE-2019-9184)"/><published>2019-02-26T00:00:00+00:00</published><updated>2019-02-26T00:00:00+00:00</updated><id>https://xpirt.github.io/blog/2019/j2store-sql-injection</id><content type="html" xml:base="https://xpirt.github.io/blog/2019/j2store-sql-injection/"><![CDATA[<h3 id="info">Info</h3> <p><strong>Product</strong>: J2Store Plugin for Joomla!<br/> <strong>Version</strong>: 3.x up to 3.3.6<br/> <strong>Product page</strong>: https://www.j2store.org/<br/> <strong>Downloads</strong>: 350,000+<br/> <strong>CVE</strong>: 2019-9184</p> <h3 id="description">Description</h3> <p>Most popular shopping/e-commerce plugin for Joomla, J2Store, was vulnerable to SQL Injection until version 3.3.7. The vulnerability affects the page product.php and the vulnerable parameter is product_option[] array.<br/> An attacker could exploit this vulnerability by running arbitrary SQL queries on the internal database – this can lead to excalation of priviliges, ability to edit prices of products and more.</p> <p>Ramesh Elamathi, the lead developer of J2Store, promptly replied willing to fix the vulnerability as soon as possible. In fact, the following day the vulnerability was fixed and 3.3.7 version was <a href="http://j2store.org/blog/general/security-update-for-j2store.html">released</a>.<br/> I was impressed by how fast he handled my report, in less than 24-hours the vulnerability was confirmed, fixed and an email was also sent to affected users.</p> <p>If you are using J2Store plugin and haven’t updated to <a href="http://j2store.org/blog/general/security-update-for-j2store.html">3.3.7</a> yet, make sure to update as soon as possible!</p> <h3 id="timeline">Timeline</h3> <p><strong>19/02/2019</strong> – Sent report to vendor<br/> <strong>19/02/2019</strong> – J2Store replied, confirmed and triaged the report<br/> <strong>20/02/2019</strong> – Vulnerability fixed and version 3.3.7 released<br/> <strong>20/02/2019</strong> – Acknowledged and rewarded\</p>]]></content><author><name></name></author><category term="j2store"/><category term="joomla"/><category term="sql-injection"/><category term="security"/><summary type="html"><![CDATA[J2Store plugin 3.3.6 for Joomla! SQL Injection vulnerability (CVE-2019-9184)]]></summary></entry><entry><title type="html">sdat2img &amp;amp; img2sdat: Unpack Android .dat images</title><link href="https://xpirt.github.io/blog/2019/sdat2img-img2sdat/" rel="alternate" type="text/html" title="sdat2img &amp;amp; img2sdat: Unpack Android .dat images"/><published>2019-02-14T00:00:00+00:00</published><updated>2019-02-14T00:00:00+00:00</updated><id>https://xpirt.github.io/blog/2019/sdat2img-img2sdat</id><content type="html" xml:base="https://xpirt.github.io/blog/2019/sdat2img-img2sdat/"><![CDATA[<p>From Android 5.0 and later, all compiled system images (OEM’s, AOSP, LineageOS, etc) are not compressed anymore the way they used to be, because of their increasing size. The new systems are now packed within custom proprietary .DAT files. The question is: how to decompress them? These tools will help you get started!</p> <p>For more information about the usage of these tools and tutorials, visit my <a href="https://forum.xda-developers.com/android/software-hacking/how-to-conver-lollipop-dat-files-to-t2978952">XDA-Developers post</a>.</p> <h2 id="sdat2img-binary">sdat2img binary</h2> <p>This tool allows you to convert sparse Android data image (.dat) into filesystem ext4 image (.img). It requires Python 2.7 or newer installed on your system. It currently supports Windows, Linux, MacOS &amp; ARM architectures.</p> <p><strong>Note</strong>: newer Google’s <a href="https://github.com/google/brotli">Brotli</a> format (system.new.dat.br) must be decompressed to a valid sparse data image before using <code class="language-plaintext highlighter-rouge">sdat2img</code> binary.</p> <h3 id="usage">Usage</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sdat2img.py &lt;transfer_list&gt; &lt;system_new_file&gt; <span class="o">[</span>system_img]
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">&lt;transfer_list&gt;</code> = input, system.transfer.list from rom zip</li> <li><code class="language-plaintext highlighter-rouge">&lt;system_new_file&gt;</code> = input, system.new.dat from rom zip</li> <li><code class="language-plaintext highlighter-rouge">[system_img]</code> = output ext4 raw image file (optional)</li> </ul> <p>Repo: <a href="https://github.com/xpirt/sdat2img">https://github.com/xpirt/sdat2img</a></p> <p>Source code: <a href="https://github.com/xpirt/sdat2img/blob/master/sdat2img.py">https://github.com/xpirt/sdat2img/blob/master/sdat2img.py</a></p> <p>Changelog: <a href="https://github.com/xpirt/sdat2img/commits/master">https://github.com/xpirt/sdat2img/commits/master</a></p> <h2 id="img2sdat-binary">img2sdat binary</h2> <p>This tool allows you to convert back from filesystem ext4 image (.img) to Android sparse data image (.dat). It requires Python 2.7 or newer installed on your system. It currently supports Windows x86/x64, Linux x86/x64 &amp; arm/arm64 architectures.</p> <h3 id="usage-1">Usage</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>img2sdat.py &lt;system_img&gt; <span class="o">[</span><span class="nt">-o</span> outdir] <span class="o">[</span><span class="nt">-v</span> version] <span class="o">[</span><span class="nt">-p</span> prefix]
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">&lt;system_img&gt;</code> = input system image</li> <li><code class="language-plaintext highlighter-rouge">[-o outdir]</code> = output directory (current directory by default)</li> <li><code class="language-plaintext highlighter-rouge">[-v version]</code> = transfer list version number (1 – 5.0, 2 – 5.1, 3 – 6.0, 4 – 7.0, will be asked by default, more info on xda thread)</li> <li><code class="language-plaintext highlighter-rouge">[-p prefix]</code> = name of image (prefix.new.dat)</li> </ul> <p>Repo: <a href="https://github.com/xpirt/img2sdat">https://github.com/xpirt/img2sdat</a></p> <p>Source code: <a href="https://github.com/xpirt/img2sdat/blob/master/img2sdat.py">https://github.com/xpirt/img2sdat/blob/master/img2sdat.py</a></p> <p>Changelog: <a href="https://github.com/xpirt/img2sdat/commits/master">https://github.com/xpirt/img2sdat/commits/master</a></p> <h2 id="credits">Credits</h2> <p>These two binaries were not possible without the initial help and work by <a href="http://weibo.com/howellzhu">howellzhu</a> and <a href="https://github.com/luxi78">luxi78</a>.</p>]]></content><author><name></name></author><category term="sdat2img"/><category term="img2sdat"/><category term="android"/><summary type="html"><![CDATA[Tools to convert sparse Android data image (.dat) into filesystem ext4 image (.img) and back]]></summary></entry></feed>